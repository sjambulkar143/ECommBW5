<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/GenerateErrorActivity/InputSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx4="http://www.tibco.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd2" xmlns:pfx3="http://www.EniqueSolutions.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd2" xmlns:uuid="java://Custom.Custom" xmlns:pfx2="http://www.tibco.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd" xmlns:pfx="http://EniqueSolutions.com/schemas/CommonModules/SharedResources/Schemas/UserOnboarding.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://EniqueSolutions.com/schemas/CommonModules/SharedResources/Schemas/UserOnboarding.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.EniqueSolutions.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd2" schemaLocation="/SharedResources/Schemas/NewFaultSchema.xsd"/>
    <xs:import xmlns:xs="http://www.w3.org/2001/XMLSchema" namespace="http://www.tibco.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd" schemaLocation="/SharedResources/Schemas/NewUserOnBoarding.xsd"/>
    <pd:name>Processes/SubProcessSecond/UpdateAccount.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx2:UpdateAccountReq"/>
    <pd:startX>146</pd:startX>
    <pd:startY>43</pd:startY>
    <pd:returnBindings>
        <xsl:choose>
            <xsl:when test="contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg1) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg2) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg3) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg4) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg5) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg6) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg7) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg8) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg9) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg10) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg11) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg12) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg13) or contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg14)">
                <pfx2:UpdateAccountRes>
                    <xsl:if test="$_error_ErrorOnAll/pfx3:Fault/pfx3:Message">
                        <pfx2:ResponseMessage>
                            <xsl:value-of select="$_error_ErrorOnAll/pfx3:Fault/pfx3:Message"/>
                        </pfx2:ResponseMessage>
                    </xsl:if>
                </pfx2:UpdateAccountRes>
            </xsl:when>
            <xsl:when test="contains($CatchCustomerID/pfx3:Fault/pfx3:MessageCode,$_globalVariables/ns2:GlobalVariables/Input/Msg15)">
                <pfx2:UpdateAccountRes>
                    <xsl:if test="$_error_ErrorOn/pfx3:Fault/pfx3:Message">
                        <pfx2:ResponseMessage>
                            <xsl:value-of select="$_error_ErrorOn/pfx3:Fault/pfx3:Message"/>
                        </pfx2:ResponseMessage>
                    </xsl:if>
                </pfx2:UpdateAccountRes>
            </xsl:when>
            <xsl:when test="exists($_error/ns1:ErrorReport)">
                <pfx2:UpdateAccountRes>
                    <xsl:if test="$_error/ns1:ErrorReport/MsgCode">
                        <pfx2:ResponseMessage>
                            <xsl:value-of select="$_error/ns1:ErrorReport/MsgCode"/>
                        </pfx2:ResponseMessage>
                    </xsl:if>
                </pfx2:UpdateAccountRes>
            </xsl:when>
            <xsl:otherwise>
                <pfx2:UpdateAccountRes>
                    <pfx2:ResponseMessage>
                        <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Sucess"/>
                    </pfx2:ResponseMessage>
                </pfx2:UpdateAccountRes>
            </xsl:otherwise>
        </xsl:choose>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType ref="pfx2:UpdateAccountRes"/>
    <pd:endX>681</pd:endX>
    <pd:endY>178</pd:endY>
    <pd:errorSchemas>
        <FaultSchema ref="pfx3:Fault"/>
    </pd:errorSchemas>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1677815380833</pd:targetNamespace>
    <pd:activity name="FeatchAccDetails">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>269</pd:x>
        <pd:y>177</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <jdbcSharedConfig>/SharedResources/connections/EcommerceJDBCConeection.sharedjdbc</jdbcSharedConfig>
            <statement>SELECT CUSTOMERID , USERNAME
  FROM SYSTEM.CREATEACCOUNT WHERE CUSTOMERID = ?
</statement>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>CUSTOMERID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <QueryOutputCachedSchemaColumns>CUSTOMERID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>USERNAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR2</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <oraObjects/>
            <oraTables/>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <CUSTOMERID>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx2:UpdateAccountReq/pfx2:CustomerID)">
                            <xsl:value-of select="$Start/pfx2:UpdateAccountReq/pfx2:CustomerID"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CUSTOMERID>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="JDBC Update">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>432</pd:x>
        <pd:y>177</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>UPDATE SYSTEM.CREATEACCOUNT
  SET FIRSTNAME = ?, LASTNAME = ?, USERNAME = ?,
      PASSWORD = ?, REENTERPASSWORD = ? ,PHONE = ?, EMAIL = ?, STREET = ?, CITY = ?,
      STATE = ?, ZIPCODE = ?
  WHERE CUSTOMERID = ?</statement>
            <jdbcSharedConfig>/SharedResources/connections/EcommerceJDBCConeection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>FIRSTNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>LASTNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>USERNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PASSWORD</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>REENTERPASSWORD</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>PHONE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>EMAIL</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STREET</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CITY</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>STATE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ZIPCODE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CUSTOMERID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <xsl:for-each select="$Start/pfx2:UpdateAccountReq">
                <jdbcUpdateActivityInput>
                    <FIRSTNAME>
                        <xsl:value-of select="pfx2:FirstName"/>
                    </FIRSTNAME>
                    <LASTNAME>
                        <xsl:value-of select="pfx2:LastName"/>
                    </LASTNAME>
                    <USERNAME>
                        <xsl:value-of select="pfx2:Username"/>
                    </USERNAME>
                    <PASSWORD>
                        <xsl:value-of select="pfx2:Password"/>
                    </PASSWORD>
                    <REENTERPASSWORD>
                        <xsl:choose>
                            <xsl:when test="exists(pfx2:ReenterPassword)">
                                <xsl:value-of select="pfx2:ReenterPassword"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </REENTERPASSWORD>
                    <PHONE>
                        <xsl:value-of select="pfx2:Phone"/>
                    </PHONE>
                    <EMAIL>
                        <xsl:value-of select="pfx2:Email"/>
                    </EMAIL>
                    <STREET>
                        <xsl:value-of select="pfx2:Street"/>
                    </STREET>
                    <CITY>
                        <xsl:value-of select="pfx2:City"/>
                    </CITY>
                    <STATE>
                        <xsl:value-of select="pfx2:State"/>
                    </STATE>
                    <ZIPCODE>
                        <xsl:value-of select="pfx2:ZipCode"/>
                    </ZIPCODE>
                    <CUSTOMERID>
                        <xsl:value-of select="pfx2:CustomerID"/>
                    </CUSTOMERID>
                </jdbcUpdateActivityInput>
            </xsl:for-each>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorOn">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>269</pd:x>
        <pd:y>307</pd:y>
        <config>
            <faultName>FaultSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <pfx3:Fault>
                        <pfx3:Message>
                            <xsl:value-of select="&quot;Record Does not Exists With this Coustomer_ID&quot;"/>
                        </pfx3:Message>
                        <pfx3:MessageCode>
                            <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg15"/>
                        </pfx3:MessageCode>
                    </pfx3:Fault>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="CatchCustomerID">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>680</pd:x>
        <pd:y>59</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <fault>localname=Fault namespace=http://www.EniqueSolutions.com/schemas/NewUserOnBoardingSOAP/SharedResources/Schemas/Schema.xsd2</fault>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="CatchAllErrors">
        <pd:type>com.tibco.pe.core.CatchActivity</pd:type>
        <pd:resourceType>ae.activities.catch</pd:resourceType>
        <pd:x>685</pd:x>
        <pd:y>300</pd:y>
        <pd:handler>true</pd:handler>
        <config>
            <catchAll>true</catchAll>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="StartLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>139</pd:x>
        <pd:y>177</pd:y>
        <config>
            <processName>/ExceptionProcesses/LogHandlerProcess/LogException.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx4:LogException>
                <pfx4:ApplicationName>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                </pfx4:ApplicationName>
                <pfx4:ProcessName>
                    <xsl:value-of select="&quot;UpdateAccountSOAPSub&quot;"/>
                </pfx4:ProcessName>
                <pfx4:LogType>
                    <xsl:value-of select="&quot;Start_Log&quot;"/>
                </pfx4:LogType>
                <xsl:if test="$Start/pfx2:UpdateAccountReq/pfx2:SessionID">
                    <pfx4:CorrelationID>
                        <xsl:value-of select="$Start/pfx2:UpdateAccountReq/pfx2:SessionID"/>
                    </pfx4:CorrelationID>
                </xsl:if>
                <pfx4:MessageType>
                    <xsl:value-of select="&quot;StartLogExcecuted&quot;"/>
                </pfx4:MessageType>
                <pfx4:Timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx4:Timestamp>
                <pfx4:Payload>
                    <xsl:value-of select="tib:render-xml($Start/pfx2:UpdateAccountReq)"/>
                </pfx4:Payload>
            </pfx4:LogException>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="EndLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>568</pd:x>
        <pd:y>178</pd:y>
        <config>
            <processName>/ExceptionProcesses/LogHandlerProcess/LogException.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx4:LogException>
                <pfx4:ApplicationName>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                </pfx4:ApplicationName>
                <pfx4:ProcessName>
                    <xsl:value-of select="&quot;UpdateAccountSOAPSub&quot;"/>
                </pfx4:ProcessName>
                <pfx4:LogType>
                    <xsl:value-of select="&quot;End_Log&quot;"/>
                </pfx4:LogType>
                <xsl:if test="$Start/pfx2:UpdateAccountReq/pfx2:SessionID">
                    <pfx4:CorrelationID>
                        <xsl:value-of select="$Start/pfx2:UpdateAccountReq/pfx2:SessionID"/>
                    </pfx4:CorrelationID>
                </xsl:if>
                <pfx4:MessageType>
                    <xsl:value-of select="&quot;EndLogExcecuted&quot;"/>
                </pfx4:MessageType>
                <pfx4:Timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx4:Timestamp>
            </pfx4:LogException>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ExceptionHandlerCust">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>835</pd:x>
        <pd:y>59</pd:y>
        <config>
            <processName>/ExceptionProcesses/ExceptionHandlerProcess/ExceptionHandler.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx4:LogException>
                <pfx4:ApplicationName>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                </pfx4:ApplicationName>
                <pfx4:ProcessName>
                    <xsl:value-of select="&quot;UpdateAccountSOAPSub&quot;"/>
                </pfx4:ProcessName>
                <pfx4:LogType>
                    <xsl:value-of select="&quot;Exception_Log&quot;"/>
                </pfx4:LogType>
                <xsl:if test="$Start/pfx2:UpdateAccountReq/pfx2:SessionID">
                    <pfx4:CorrelationID>
                        <xsl:value-of select="$Start/pfx2:UpdateAccountReq/pfx2:SessionID"/>
                    </pfx4:CorrelationID>
                </xsl:if>
                <pfx4:MessageType>
                    <xsl:value-of select="&quot;ErrorFound&quot;"/>
                </pfx4:MessageType>
                <pfx4:Timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx4:Timestamp>
                <pfx4:Payload>
                    <xsl:value-of select="tib:render-xml($CatchCustomerID)"/>
                </pfx4:Payload>
                <pfx4:ExceptionType>
                    <xsl:if test="$CatchCustomerID/pfx3:Fault/pfx3:MessageCode">
                        <pfx4:MessageCode>
                            <xsl:value-of select="$CatchCustomerID/pfx3:Fault/pfx3:MessageCode"/>
                        </pfx4:MessageCode>
                    </xsl:if>
                    <xsl:if test="$CatchCustomerID/pfx3:Fault/pfx3:Message">
                        <pfx4:ExceptionMessage>
                            <xsl:value-of select="$CatchCustomerID/pfx3:Fault/pfx3:Message"/>
                        </pfx4:ExceptionMessage>
                    </xsl:if>
                    <xsl:if test="$CatchCustomerID/pfx3:Fault/pfx3:StackTrace">
                        <pfx4:StackTrace>
                            <xsl:value-of select="$CatchCustomerID/pfx3:Fault/pfx3:StackTrace"/>
                        </pfx4:StackTrace>
                    </xsl:if>
                </pfx4:ExceptionType>
            </pfx4:LogException>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ExceptionHandlerAll">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>851</pd:x>
        <pd:y>304</pd:y>
        <config>
            <processName>/ExceptionProcesses/ExceptionHandlerProcess/ExceptionHandler.process</processName>
            <spawn>true</spawn>
        </config>
        <pd:inputBindings>
            <pfx4:LogException>
                <pfx4:ApplicationName>
                    <xsl:value-of select="$_processContext/ns1:ProcessContext/ProjectName"/>
                </pfx4:ApplicationName>
                <pfx4:ProcessName>
                    <xsl:value-of select="&quot;UpdateAccountSOAPSub&quot;"/>
                </pfx4:ProcessName>
                <pfx4:LogType>
                    <xsl:value-of select="&quot;Exception_Log&quot;"/>
                </pfx4:LogType>
                <xsl:if test="$Start/pfx2:UpdateAccountReq/pfx2:SessionID">
                    <pfx4:CorrelationID>
                        <xsl:value-of select="$Start/pfx2:UpdateAccountReq/pfx2:SessionID"/>
                    </pfx4:CorrelationID>
                </xsl:if>
                <pfx4:MessageType>
                    <xsl:value-of select="&quot;ErrorFound&quot;"/>
                </pfx4:MessageType>
                <pfx4:Timestamp>
                    <xsl:value-of select="current-dateTime()"/>
                </pfx4:Timestamp>
                <pfx4:Payload>
                    <xsl:value-of select="tib:render-xml($CatchAllErrors/exceptiondata)"/>
                </pfx4:Payload>
            </pfx4:LogException>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="ErrorOnAll">
        <pd:type>com.tibco.pe.core.GenerateErrorActivity</pd:type>
        <pd:resourceType>ae.activities.throw</pd:resourceType>
        <pd:x>136</pd:x>
        <pd:y>314</pd:y>
        <config>
            <faultName>FaultSchema</faultName>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <data>
                    <xsl:choose>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:CustomerID) = 0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Customer_ID should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg1"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="not(uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:CustomerID, &quot;^[a-zA-Z0-9_]*$&quot;))">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Customer_ID accept Alphanumeric Value&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg2"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:Username) =0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;User_ID should not be Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg3"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:Password) = 0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Password Should should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg4"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="not(&#x9;uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Password,&quot;(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$&quot;))">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Password format is not correct&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg5"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword) = 0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Re_Enter Password should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg6"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="not(uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword,&quot;(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$&quot;))">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Re_Enter Password format not Correct&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg7"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="$Start/pfx2:UpdateAccountReq/pfx2:Password !=$Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;ReEnterPassword Mismatch&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg8"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:Phone) = 0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Phone number should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg9"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="not(uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Phone, &quot;[0-9]{10}&quot;))">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Phone Number Should be 10 Digit&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg10"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:Email) =0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Email_ID should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg11"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="not(uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Email,&quot;([A-Za-z0-9]+)@([a-zA-Z]+)([\.])([a-zA-Z]+)&quot;))">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Email_ID not in Correct Format&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg12"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:when test="string-length($Start/pfx2:UpdateAccountReq/pfx2:ZipCode) =0">
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Zip Code should not Empty&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg13"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:when>
                        <xsl:otherwise>
                            <pfx3:Fault>
                                <pfx3:Message>
                                    <xsl:value-of select="&quot;Zipcode Must be 6 Digit&quot;"/>
                                </pfx3:Message>
                                <pfx3:MessageCode>
                                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Input/Msg14"/>
                                </pfx3:MessageCode>
                            </pfx3:Fault>
                        </xsl:otherwise>
                    </xsl:choose>
                </data>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>StartLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FeatchAccDetails</pd:from>
        <pd:to>JDBC Update</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Start/pfx2:UpdateAccountReq/pfx2:CustomerID  = $FeatchAccDetails/resultSet/Record/CUSTOMERID</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>JDBC Update</pd:from>
        <pd:to>EndLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>FeatchAccDetails</pd:from>
        <pd:to>ErrorOn</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>StartLog</pd:from>
        <pd:to>FeatchAccDetails</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>string-length($Start/pfx2:UpdateAccountReq/pfx2:CustomerID) &gt;0  and  uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:CustomerID, "^[a-zA-Z0-9_]*$") and string-length($Start/pfx2:UpdateAccountReq/pfx2:Username) &gt;0  and  string-length($Start/pfx2:UpdateAccountReq/pfx2:Password) &gt;0  and uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Password, "(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$") and string-length($Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword) &gt; 0 and uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword, "(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$") and $Start/pfx2:UpdateAccountReq/pfx2:Password = $Start/pfx2:UpdateAccountReq/pfx2:ReenterPassword  and string-length($Start/pfx2:UpdateAccountReq/pfx2:Phone) &gt;0 and uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Phone, "[0-9]{10}") and string-length($Start/pfx2:UpdateAccountReq/pfx2:Email) &gt;0 and uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:Email,"([A-Za-z0-9]+)@([a-zA-Z]+)([\.])([a-zA-Z]+)") and string-length($Start/pfx2:UpdateAccountReq/pfx2:ZipCode) &gt;0 and uuid:matchRegex($Start/pfx2:UpdateAccountReq/pfx2:ZipCode, "[0-9]{6}")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>EndLog</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchCustomerID</pd:from>
        <pd:to>ExceptionHandlerCust</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>CatchAllErrors</pd:from>
        <pd:to>ExceptionHandlerAll</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ExceptionHandlerCust</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ExceptionHandlerAll</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>StartLog</pd:from>
        <pd:to>ErrorOnAll</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>